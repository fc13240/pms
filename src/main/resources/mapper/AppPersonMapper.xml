<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.lotut.pms.dao.mapper.AppPersonMapper">
  <resultMap type="CommonAppPerson" id="AppPersonWithShareUsers">
  	<id property="appPersonId" column="app_person_id"/>
		<result property="name" column="name"/>
		<result property="idNumber" column="id_number"/>
		<result property="postcodeAddress" column="postcode_address"/>
		<result property="otherInfo" column="other_information"/>
		<result property="feeReduceTransactionStatus" column="fee_reduce_transaction_status"/>
		<result property="transactionIdentityId" column="transaction_identity_id"/>
		<result property="transactionYear" column="transaction_year"/>
		<result property="appPersonUrl" column="app_person_attachment_file"/>
		<result property="userId" column="user_id"/>
		<result property="proxyUrl" column="proxy_file"/>
		<collection property="shareUsers" resultMap="com.lotut.pms.dao.mapper.UserMapper.UserResultMap"/>
  </resultMap>

  <insert id="addAppPerson" parameterType="CommonAppPerson" >
  	insert into common_app_person(name,id_number,postcode_address,other_information,user_id,
  	fee_reduce_transaction_status,transaction_identity_id,transaction_year) 
  	values(#{name},#{idNumber},#{postcodeAddress},#{otherInfo},#{userId},
  	#{feeReduceTransactionStatus},#{transactionIdentityId},#{transactionYear})
  	
  </insert>
  
  <insert id="addUserAppPerson" parameterType="UserAppPerson">
  	insert into user_app_person (user,app_person)values(#{userId},#{appPersonId})
  
  </insert>
  
  	
  	<!-- <select id="getUserAppPersons" parameterType="int" resultMap="AppPersonWithShareUsers">
  	    		
  SELECT n.app_person_id ,n.name ,n.id_number,n.fee_reduce_transaction_status,
	   n.transaction_identity_id,n.transaction_year,n.app_person_attachment_file,n.proxy_file,
		n.postcode_address ,n.other_information ,u.user_id,u.username FROM 
 (SELECT p.app_person_id ,p.name ,p.id_number,p.fee_reduce_transaction_status,
  	   p.transaction_identity_id,p.transaction_year,p.app_person_attachment_file,p.proxy_file,
  		p.postcode_address ,p.other_information ,u.user_id,u.username  FROM common_app_person p
  		   JOIN user_app_person up ON p.app_person_id = up.app_person AND p.user_id= up.user
  		 JOIN users u ON u.user_id = up.user
  		WHERE p.user_id=#{userId}) m JOIN user_app_person a ON m.app_person_id = a.app_person) n
  	</select>
  	 -->
 	<select id="getUserAppPersons" parameterType="Page" resultMap="AppPersonWithShareUsers">
    	SELECT un.* ,u.user_id  ,u.username FROM 	
  	(SELECT p.app_person_id ,p.name ,p.id_number,p.fee_reduce_transaction_status,
  	   p.transaction_identity_id,p.transaction_year,p.app_person_attachment_file,p.proxy_file,
  		p.postcode_address ,p.other_information FROM common_app_person p WHERE app_person_id IN		
 		(SELECT app_person FROM user_app_person WHERE USER =#{userId}) limit #{startIndex}, #{pageSize}) AS un  JOIN user_app_person up ON un.app_person_id = up.app_person
		  	JOIN users u ON up.user = u.user_id 
  	</select> 
  	
  <!-- 	 	
  	SELECT m.* ,h.username FROM 
 (SELECT p.app_person_id ,p.name ,p.id_number,p.fee_reduce_transaction_status,
  	   p.transaction_identity_id,p.transaction_year,p.app_person_attachment_file,p.proxy_file,
  		p.postcode_address ,p.other_information ,u.user_id,u.username  FROM common_app_person p
  		 JOIN users u ON u.user_id = p.user_id
  		WHERE p.user_id=2 ) m JOIN user_app_person a ON m.app_person_id = a.app_person JOIN 
  		users h ON h.user_id = a.user
  	</select> -->
 
  	
  	<select id="getAllAppPersonByUser" parameterType="int" resultType="CommonAppPerson">
  		select p.app_person_id as appPersonId,p.name as name,p.id_number as idNumber,
  		p.postcode_address as postcodeAddress,p.other_information as otherInfo,p.fee_reduce_transaction_status as feeReduceTransactionStatus from common_app_person p
  		 where user_id=#{userId}
  		
  	</select>
  	
  	<select id="getOneAppPersonById"	parameterType="int" resultType="CommonAppPerson">
  		select p.app_person_id as appPersonId,  p.name as name,p.id_number as idNumber,
  		p.fee_reduce_transaction_status as feeReduceTransactionStatus, p.transaction_identity_id as transactionIdentityId,
  		p.transaction_year as transactionYear,
  		p.postcode_address as postcodeAddress,p.other_information otherInfo from common_app_person p 
  		 where p.app_person_id=#{appPersonId}
  	</select>
  	
  	<update id="updateAppPerson" parameterType="CommonAppPerson">
  		update common_app_person  set name=#{name},id_number=#{idNumber},
  		fee_reduce_transaction_status=#{feeReduceTransactionStatus},transaction_identity_id=#{transactionIdentityId},
  		transaction_year=#{transactionYear},
  		postcode_address=#{postcodeAddress},other_information=#{otherInfo}
  		where app_person_id=#{appPersonId}
  		
  	</update>
  	
  	<delete id="deleteAppPersonById" parameterType="int">
  		delete from common_app_person where app_person_id =#{appPersonId}
  	</delete>
  	
  	<select id="getAppPersonByName" resultType="CommonAppPerson">
  		select p.app_person_id as appPersonId,p.name as name,p.id_number as idNumber,
  		p.fee_reduce_transaction_status as feeReduceTransactionStatus,
  		p.postcode_address as postcodeAddress,p.other_information as otherInfo from common_app_person p  
  		where p.name like #{appPerson} and p.user_id=#{userId}
  	</select>
  	

  	<update id="saveAttachmentFile" parameterType="CommonAppPerson">
  		update common_app_person set app_person_attachment_file=#{appPersonUrl}
  		where app_person_id =#{appPersonId}
  	</update>
  	
  	<update id="saveProxyFile" parameterType="CommonAppPerson">
  		update common_app_person set proxy_file =#{proxyUrl}
  		where app_person_id =#{appPersonId}
  	</update>
  	
  	<select id="getAppPersonUrlById" parameterType="int" resultType="String">
  		select app_person_attachment_file from common_app_person where app_person_id =#{appPersonId}
  	</select>
  	
  	<select id="getProxyUrlById" parameterType="int" resultType="String">
  		select proxy_file from common_app_person where app_person_id =#{appPersonId}
  	</select>
  	
  	<update id="deleteAttachmentFileById" parameterType="CommonAppPerson">
  		update common_app_person set app_person_attachment_file=null where app_person_id =#{appPersonId}
  	</update>
  
  	<select id="getIdbyAppPerson" resultType="int" parameterType="CommonAppPerson">
  		select app_person_id from common_app_person where name=#{name}  and id_number=#{idNumber} and 
  		fee_reduce_transaction_status=#{feeReduceTransactionStatus} and transaction_identity_id=#{transactionIdentityId} and 
  		transaction_year=#{transactionYear} and 
  		postcode_address=#{postcodeAddress} and other_information=#{otherInfo}
  	</select>
  	
  	<delete id="deleteUserAppPersonbyId" parameterType="UserAppPerson">
  		delete from  user_app_person where user=#{userId} and app_person = #{appPersonId}
  	</delete>
  	
  	<update id="updateAppPersonUserIdNull" parameterType="CommonAppPerson">
  		update common_app_person set user_id = 0 where app_person_id=#{appPersonId} and user_id = #{userId}
  	
  	</update>
  	
  	<insert id="insertUserAppPersons" parameterType="list">
		replace into user_app_person(user, app_person) 
		values
		<foreach item="userAppPersonRecord" collection="list" separator=",">
			(#{userAppPersonRecord.user}, #{userAppPersonRecord.appPerson})
		</foreach>
	</insert>	
	
	<select id="searchAppPersonByPage" parameterType="AppPersonSearchCondition" resultMap="AppPersonWithShareUsers">
		<if test="keyword != null">
			<bind name="keyword_pattern" value="'%' + keyword + '%'" />
		</if>	
		SELECT un.* ,u.user_id  ,u.username FROM 	
  		(SELECT p.app_person_id ,p.name ,p.id_number,p.fee_reduce_transaction_status,
  	   p.transaction_identity_id,p.transaction_year,p.app_person_attachment_file,p.proxy_file,
  		p.postcode_address ,p.other_information FROM common_app_person p WHERE app_person_id IN		
 		(SELECT app_person FROM user_app_person WHERE USER =#{userId})
 		
		
		<if test="keyword != null">
					and (p.name like #{keyword_pattern} or p.id_number like #{keyword_pattern} or p.postcode_address like #{keyword_pattern}  or p.fee_reduce_transaction_status like #{keyword_pattern} 
					or p.transaction_identity_id like #{keyword_pattern} or p.transaction_year like #{keyword_pattern})
		</if> 
		
		limit #{page.startIndex}, #{page.pageSize}		 	
 		) AS un  JOIN user_app_person up ON un.app_person_id = up.app_person
		  	JOIN users u ON up.user = u.user_id
	
	</select>
	
	<select id="searchAppPersonCount" parameterType="AppPersonSearchCondition" resultType="int">
		<if test="keyword != null">
			<bind name="keyword_pattern" value="'%' + keyword + '%'" />
		</if>	
			
  		SELECT count(*)
  	 FROM common_app_person p WHERE app_person_id IN		
 		(SELECT app_person FROM user_app_person WHERE USER =#{userId}
		<if test="keyword != null">
					and (p.name like #{keyword_pattern} or p.id_number like #{keyword_pattern} or p.postcode_address like #{keyword_pattern}  or p.fee_reduce_transaction_status like #{keyword_pattern} 
					or p.transaction_identity_id like #{keyword_pattern} or p.transaction_year like #{keyword_pattern})
		</if> )	
	</select>
	
	<select id="getUserAppPersonCount" resultType="int">
		select count(*) from user_app_person where user = #{userId}
	</select>
  </mapper>
  