<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lotut.pms.dao.mapper.NoticeMapper">
	<resultMap type="NoticeProcessStatus" id="NoticeProcessStatusResultMap">
		<id property="processStatusId" column="notice_process_status_id"/>
		<result property="processStatusDescription" column="notice_process_status_desc"/>
	</resultMap>
	
	<resultMap type="NoticePaperApplyType" id="NoticePaperApplyTypeResultMap">
		<id property="paperTypeId" column="notice_paper_apply_type_id"/>
		<result property="paperTypeDescription" column="notice_paper_apply_type_desc"/>	
	</resultMap>
	
	<resultMap type="NoticeType" id="NoticeTypeResultMap">
		<id property="noticeTypeId" column="notice_type_id"/>
		<result property="noticeTypeDescription" column="notice_type_desc"/>	
	</resultMap>	
	
	<resultMap type="Notice" id="NoticeResultMap">
		<id property="noticeId" column="notice_id"/>
		<result property="name" column="notice_name"/>
		<result property="noticeSequence" column="notice_sequence"/>
		<result property="dispatchSequence" column="dispatch_sequence"/>
		<result property="dispatchDate" column="dispatch_date"/>
		<result property="remainDays" column="remain_days"/>
		<result property="noticeCode" column="noticeCode"/>
		<result property="zipBid" column="zip_bid"/>
		<result property="dmhFlag" column="dmh_flag"/>
		<result property="archiveNo" column="archive_no"/>
		<result property="zipfileName" column="zipfile_name"/>
		<association property="processStatus" resultMap="NoticeProcessStatusResultMap"/>
		<association property="paperApplyType"  javaType="NoticePaperApplyType">
			<id property="paperTypeId" column="paper_type_id"/>
			<result property="paperTypeDescription" column="paper_type_description"/>
		</association>
		<association property="processUser"  javaType="User">
			<id property="userId" column="process_user_id"/>
			<result property="username" column="process_username"/>
		</association>
		<association property="patent"  javaType="Patent">
			<id property="patentId" column="patent_id"/>
			<result property="appNo" column="app_no"/>
			<result property="name" column="patent_name"/>
			<result property="appPerson" column="app_person"/>
			<association property="patentStatus" javaType="PatentStatus">
				<id property="patentStatusId" column="patent_status_id"/>
				<result property="statusDescription" column="patent_status_description"/>
			</association>
			<collection property="shareUsers" ofType="User">
				<id property="userId" column="share_user_id"/>
				<result property="username" column="share_username"/>
			</collection>			
		</association>		
	</resultMap>
	
	<select id="getUserNotices" resultMap="NoticeResultMap">
		select p.patent_id, p.app_no, p.patent_name, p.app_person, ps.patent_status_id, ps.patent_status_desc as patent_status_description, 
			u.user_id as share_user_id,  u.username as share_username, 
			n.notice_id,n.notice_name,  n.notice_sequence, n.dispatch_sequence, n.dispatch_date,
			if(n.time_limit - datediff(curdate(), n.dispatch_date) >= 0, n.time_limit - datediff(curdate(), n.dispatch_date), -1)  as remain_days,
			n.notice_code, n.zip_bid, n.dmh_flag, n.archive_no, n.zipfile_name,
			npt.notice_paper_apply_type_id as paper_type_id, npt.notice_paper_apply_type_desc as paper_type_description, 
			nps.notice_process_status_id, nps.notice_process_status_desc, n.process_user as process_user_id, pu.username as process_username
		  from patents p join patent_status ps on p.patent_status = ps.patent_status_id
			join user_patents up on p.patent_id = up.patent 
			join notices n on n.patent = up.patent
			left join users pu on pu.user_id = n.process_user
			join users u on u.user_id = up.user
			join notice_paper_apply_types npt on n.paper_apply_type = npt.notice_paper_apply_type_id
			join notice_process_status nps on nps.notice_process_status_id = n.process_status
		 where n.patent in (select patent from user_patents where user = #{userId})	
		 
	</select>
	<!-- 分页 -->
	<select id="getUserNoticesCount" resultType="int">
		select count(*) from notices where patent in (select patent from user_patents where user = #{userId})	
	</select>
	
	<select id="getUserNoticesByPage" parameterType="Page" resultMap="NoticeResultMap">
		select un.*, u.user_id as share_user_id,  u.username as share_username
		from (select p.patent_id, p.app_no, p.patent_name, p.app_person, ps.patent_status_id, ps.patent_status_desc as patent_status_description,
				n.notice_id,n.notice_name,  n.notice_sequence, n.dispatch_sequence, n.dispatch_date,
				if(n.time_limit - datediff(curdate(), n.dispatch_date) >= 0, n.time_limit - datediff(curdate(), n.dispatch_date), -1)  as remain_days,
				n.notice_code, n.zip_bid, n.dmh_flag, n.archive_no, n.zipfile_name,
				npt.notice_paper_apply_type_id as paper_type_id, npt.notice_paper_apply_type_desc as paper_type_description, 
				nps.notice_process_status_id, nps.notice_process_status_desc, n.process_user as process_user_id, pu.username as process_username
				from patents p join patent_status ps on p.patent_status = ps.patent_status_id
						join notices n on n.patent = p.patent_id
						left join users pu on pu.user_id = n.process_user
						join notice_paper_apply_types npt on n.paper_apply_type = npt.notice_paper_apply_type_id
						join notice_process_status nps on nps.notice_process_status_id = n.process_status
			 where n.patent in (select patent from user_patents where user = #{userId})
			  order by n.dispatch_date desc, p.app_person, p.patent_id
				limit #{startIndex}, #{pageSize}) as un
			join user_patents up on un.patent_id = up.patent
		  	join users u on up.user = u.user_id	
	</select>
	<!-- 通知书处理状态 -->
	<update id="updateProcessStatus">
		update notices set process_status = #{processStatus} 
		where notice_id = #{noticeId}
	</update>

	<resultMap type="Notice" id="SingleNoticeResultMap">
		<id property="noticeId" column="notice_id"/>
		<result property="name" column="notice_name"/>
		<result property="noticeSequence" column="notice_sequence"/>
		<result property="dispatchDate" column="dispatch_date"/>
		<result property="zipfileName" column="zipfile_name"/>
		<association property="patent"  javaType="Patent">
			<id property="patentId" column="patent_id"/>
			<result property="appNo" column="app_no"/>
			<result property="name" column="patent_name"/>
		</association>		
	</resultMap>	
	<select id="getNoticeById" resultMap="SingleNoticeResultMap">
		select n.notice_id, n.notice_sequence, n.dispatch_date, n.notice_name, n.zipfile_name, p.patent_id, p.app_no, p.patent_name
		  from notices n join patents p on n.patent = p.patent_id
		 where notice_id = #{noticeId} 
	</select>
	
	<select id="getUserNoticesByPatentType" resultMap="NoticeResultMap">
		select p.patent_id, p.app_no, p.patent_name, p.app_person, ps.patent_status_id, ps.patent_status_desc as patent_status_description, 
			u.user_id as share_user_id,  u.username as share_username, 
			n.notice_id,n.notice_name,  n.notice_sequence, n.dispatch_sequence, n.dispatch_date,
			if(n.time_limit - datediff(curdate(), n.dispatch_date) >= 0, n.time_limit - datediff(curdate(), n.dispatch_date), -1)  as remain_days,
			n.notice_code, n.zip_bid, n.dmh_flag, n.archive_no, n.zipfile_name, 
			npt.notice_paper_apply_type_id as paper_type_id, npt.notice_paper_apply_type_desc as paper_type_description, 
			nps.notice_process_status_id, nps.notice_process_status_desc, n.process_user as process_user_id, pu.username as process_username
		  from patents p join patent_status ps on p.patent_status = ps.patent_status_id
			join user_patents up on p.patent_id = up.patent 
			join notices n on n.patent = up.patent
			left join users pu on pu.user_id = n.process_user
			join users u on u.user_id = up.user
			join notice_paper_apply_types npt on n.paper_apply_type = npt.notice_paper_apply_type_id
			join notice_process_status nps on nps.notice_process_status_id = n.process_status
		 where p.patent_type = #{patentType}
		   and n.patent in (select patent from user_patents where user = #{userId})	
	</select>	
	
	<select id="getUserNoticesByType" resultMap="NoticeResultMap">
		select p.patent_id, p.app_no, p.patent_name, p.app_person, ps.patent_status_id, ps.patent_status_desc as patent_status_description, 
			u.user_id as share_user_id,  u.username as share_username, 
			n.notice_id,n.notice_name,  n.notice_sequence, n.dispatch_sequence, n.dispatch_date,
			if(n.time_limit - datediff(curdate(), n.dispatch_date) >= 0, n.time_limit - datediff(curdate(), n.dispatch_date), -1)  as remain_days,
			n.notice_code, n.zip_bid, n.dmh_flag, n.archive_no, n.zipfile_name,
			npt.notice_paper_apply_type_id as paper_type_id, npt.notice_paper_apply_type_desc as paper_type_description, 
			nps.notice_process_status_id, nps.notice_process_status_desc, n.process_user as process_user_id, pu.username as process_username
		  from patents p join patent_status ps on p.patent_status = ps.patent_status_id
			join user_patents up on p.patent_id = up.patent 
			join notices n on n.patent = up.patent
			left join users pu on pu.user_id = n.process_user
			join users u on u.user_id = up.user
			join notice_paper_apply_types npt on n.paper_apply_type = npt.notice_paper_apply_type_id
			join notice_process_status nps on nps.notice_process_status_id = n.process_status
		 where n.notice_type = #{noticeType}
		   and n.patent in (select patent from user_patents where user = #{userId})	
	</select>
	
	<select id="getUserNoticesByRemainDays" resultMap="NoticeResultMap">
		select p.patent_id, p.app_no, p.patent_name, p.app_person, ps.patent_status_id, ps.patent_status_desc as patent_status_description, 
			u.user_id as share_user_id,  u.username as share_username, 
			n.notice_id,n.notice_name,  n.notice_sequence, n.dispatch_sequence, n.dispatch_date, notice_remain_days.remain_days,
			n.notice_code, n.zip_bid, n.dmh_flag, n.archive_no, n.zipfile_name,
			npt.notice_paper_apply_type_id as paper_type_id, npt.notice_paper_apply_type_desc as paper_type_description, 
			nps.notice_process_status_id, nps.notice_process_status_desc, n.process_user as process_user_id, pu.username as process_username
		  from patents p join patent_status ps on p.patent_status = ps.patent_status_id
			join user_patents up on p.patent_id = up.patent 
			join notices n on n.patent = up.patent
			left join users pu on pu.user_id = n.process_user
			join users u on u.user_id = up.user
			join notice_paper_apply_types npt on n.paper_apply_type = npt.notice_paper_apply_type_id
			join notice_process_status nps on nps.notice_process_status_id = n.process_status
			join (select notice_id, if(time_limit - datediff(curdate(), dispatch_date) >= 0, time_limit - datediff(curdate(), dispatch_date), -1)  as remain_days
						  from notices) as notice_remain_days
			on n.notice_id = notice_remain_days.notice_id
		 where n.patent in (select patent from user_patents where user = #{userId})
		 	<choose>
		 		<when test="timeLimitType == 1">
		 			and remain_days = -1
		 		</when>
		 		<when test="timeLimitType == 2">
		 			and remain_days between 0 and 7
		 		</when>
		 		<when test="timeLimitType == 3">
		 			and remain_days between 8 and 14
		 		</when>
		 		<when test="timeLimitType == 4">
		 			and remain_days between 15 and 30
		 		</when>
		 		<otherwise>
		 			and remain_days > 30
		 		</otherwise>	 				 				 				 		
		 	</choose>
	</select>			
	
	<select id="searchUserNotices" parameterType="NoticeSearchCondition" resultMap="NoticeResultMap">
		<if test="keyword != null">
			<bind name="keyword_pattern" value="'%' + keyword + '%'" />
		</if>
		select un.*, u.user_id as share_user_id,  u.username as share_username
		from (select p.patent_id, p.app_no, p.patent_name, p.app_person, ps.patent_status_id, ps.patent_status_desc as patent_status_description,
				n.notice_id,n.notice_name,  n.notice_sequence, n.dispatch_sequence, n.dispatch_date,
				if(n.time_limit - datediff(curdate(), n.dispatch_date) >= 0, n.time_limit - datediff(curdate(), n.dispatch_date), -1)  as remain_days,
				n.notice_code, n.zip_bid, n.dmh_flag, n.archive_no, n.zipfile_name,
				npt.notice_paper_apply_type_id as paper_type_id, npt.notice_paper_apply_type_desc as paper_type_description, 
				nps.notice_process_status_id, nps.notice_process_status_desc, n.process_user as process_user_id, pu.username as process_username
				from patents p join patent_status ps on p.patent_status = ps.patent_status_id
						join notices n on n.patent = p.patent_id
						left join users pu on pu.user_id = n.process_user
						join notice_paper_apply_types npt on n.paper_apply_type = npt.notice_paper_apply_type_id
						join notice_process_status nps on nps.notice_process_status_id = n.process_status
			 where n.patent in (select patent from user_patents where user = #{userId})
			 	<if test="patentType != null">
			 		and p.patent_type = #{patentType}
			 	</if>	
			 	<if test="noticeProcessStatus != null">
			 		and n.process_status = #{noticeProcessStatus}
			 	</if>	
			 	<if test="noticeType != null">
			 		and n.notice_type = #{noticeType}
			 	</if>	
			 	<if test="paperApplyType != null">
			 		and n.paper_apply_type = #{paperApplyType}
			 	</if>		 			 	
			 	<if test="startAppDate != null">
			 		and p.app_date >= #{startAppDate}
			 	</if>	
			 	<if test="endAppDate != null">
			 		<![CDATA[ and p.app_date <= #{endAppDate} ]]>
			 	</if>	
			 	<if test="startDispatchDate != null">
			 		and n.dispatch_date >= #{startDispatchDate}
			 	</if>	
			 	<if test="endDispatchDate != null">
			 		<![CDATA[ and n.dispatch_date <= #{endDispatchDate} ]]>
			 	</if>		 	
			 	<if test="keyword != null">
					and (p.app_no like #{keyword_pattern} or p.patent_name like #{keyword_pattern} or p.app_person like #{keyword_pattern} or
						n.notice_name like #{keyword_pattern} or ps.patent_status_desc like #{keyword_pattern})
				</if> 				 
			  order by n.dispatch_date desc, p.app_person, p.patent_id
				limit #{startIndex}, #{pageSize}) as un
			join user_patents up on un.patent_id = up.patent
		  	join users u on up.user = u.user_id			
	</select>
	
	<select id="searchUserNoticesCount" resultType="int">
		<if test="keyword != null">
			<bind name="keyword_pattern" value="'%' + keyword + '%'" />
		</if>	
		select count(*) 
		  from notices n join patents p on n.patent = p.patent_id
		  	join patent_status ps on p.patent_status = ps.patent_status_id
		 where patent in (select patent from user_patents where user = #{userId})	
		 	<if test="patentType != null">
		 		and p.patent_type = #{patentType}
		 	</if>	
		 	<if test="noticeProcessStatus != null">
		 		and n.process_status = #{noticeProcessStatus}
		 	</if>	
		 	<if test="noticeType != null">
		 		and n.notice_type = #{noticeType}
		 	</if>	
		 	<if test="paperApplyType != null">
		 		and n.paper_apply_type = #{paperApplyType}
		 	</if>		 			 	
		 	<if test="startAppDate != null">
		 		and p.app_date >= #{startAppDate}
		 	</if>	
		 	<if test="endAppDate != null">
		 		<![CDATA[ and p.app_date <= #{endAppDate} ]]>
		 	</if>	
		 	<if test="startDispatchDate != null">
		 		and n.dispatch_date >= #{startDispatchDate}
		 	</if>	
		 	<if test="endDispatchDate != null">
		 		<![CDATA[ and n.dispatch_date <= #{endDispatchDate} ]]>
		 	</if>		 	
		 	<if test="keyword != null">
				and (p.app_no like #{keyword_pattern} or p.patent_name like #{keyword_pattern} or p.app_person like #{keyword_pattern} or
					n.notice_name like #{keyword_pattern} or ps.patent_status_desc like #{keyword_pattern})
			</if> 				 		 
	</select>	
	
	<select id="searchUserNoticesByPage" parameterType="NoticeSearchCondition" resultMap="NoticeResultMap">
		<if test="keyword != null">
			<bind name="keyword_pattern" value="'%' + keyword + '%'" />
		</if>
		select un.*, u.user_id as share_user_id,  u.username as share_username
		from (select p.patent_id, p.app_no, p.patent_name, p.app_person, ps.patent_status_id, ps.patent_status_desc as patent_status_description,
				n.notice_id,n.notice_name,  n.notice_sequence, n.dispatch_sequence, n.dispatch_date,
				if(n.time_limit - datediff(curdate(), n.dispatch_date) >= 0, n.time_limit - datediff(curdate(), n.dispatch_date), -1)  as remain_days,
				n.notice_code, n.zip_bid, n.dmh_flag, n.archive_no, n.zipfile_name,
				npt.notice_paper_apply_type_id as paper_type_id, npt.notice_paper_apply_type_desc as paper_type_description, 
				nps.notice_process_status_id, nps.notice_process_status_desc, n.process_user as process_user_id, pu.username as process_username
				from patents p join patent_status ps on p.patent_status = ps.patent_status_id
						join notices n on n.patent = p.patent_id
						left join users pu on pu.user_id = n.process_user
						join notice_paper_apply_types npt on n.paper_apply_type = npt.notice_paper_apply_type_id
						join notice_process_status nps on nps.notice_process_status_id = n.process_status
			 where n.patent in (select patent from user_patents where user = #{userId})
			 	<if test="patentType != null">
			 		and p.patent_type = #{patentType}
			 	</if>	
			 	<if test="noticeProcessStatus != null">
			 		and n.process_status = #{noticeProcessStatus}
			 	</if>	
			 	<if test="noticeType != null">
			 		and n.notice_type = #{noticeType}
			 	</if>	
			 	<if test="paperApplyType != null">
			 		and n.paper_apply_type = #{paperApplyType}
			 	</if>		 			 	
			 	<if test="startAppDate != null">
			 		and p.app_date >= #{startAppDate}
			 	</if>	
			 	<if test="endAppDate != null">
			 		<![CDATA[ and p.app_date <= #{endAppDate} ]]>
			 	</if>	
			 	<if test="startDispatchDate != null">
			 		and n.dispatch_date >= #{startDispatchDate}
			 	</if>	
			 	<if test="endDispatchDate != null">
			 		<![CDATA[ and n.dispatch_date <= #{endDispatchDate} ]]>
			 	</if>		 	
			 	<if test="keyword != null">
					and (p.app_no like #{keyword_pattern} or p.patent_name like #{keyword_pattern} or p.app_person like #{keyword_pattern} or
						n.notice_name like #{keyword_pattern} or ps.patent_status_desc like #{keyword_pattern})
				</if> 				 
			  order by n.dispatch_date desc, p.app_person, p.patent_id
				limit #{page.startIndex}, #{page.pageSize}) as un
			join user_patents up on un.patent_id = up.patent
		  	join users u on up.user = u.user_id		
	</select>
	
	<insert id="insertOrUpdateNotice" parameterType="Notice" useGeneratedKeys="true" keyProperty="noticeId">
		insert into notices(notice_sequence, dispatch_sequence, time_limit, dispatch_date, notice_name, notice_code, zip_bid, dmh_flag, archive_no, zipfile_name, notice_type, patent)
		values(#{noticeSequence}, #{dispatchSequence, javaType=string, jdbcType=VARCHAR}, #{timeLimt, javaType=Integer, jdbcType=INTEGER},
			   #{dispatchDate, javaType=date, jdbcType=DATE}, #{name, javaType=string, jdbcType=VARCHAR}, #{noticeCode, javaType=string, jdbcType=VARCHAR},
			   #{zipBid, javaType=string, jdbcType=VARCHAR}, #{dmhFlag, javaType=string, jdbcType=VARCHAR}, #{archiveNo, javaType=string, jdbcType=VARCHAR},
			   #{zipfileName, javaType=string, jdbcType=VARCHAR}, #{noticeType.noticeTypeId, javaType=int, jdbcType=INTEGER}, #{patent.patentId})
		on duplicate key update 
			notice_sequence = #{noticeSequence},
			<if test="dispatchSequence != null">dispatch_sequence = #{dispatchSequence},</if>
			<if test="timeLimt != null">time_limit = #{timeLimt},</if>
			<if test="dispatchDate != null">dispatch_date = #{dispatchDate},</if>
			<if test="name != null">notice_name = #{name},</if>
			<if test="noticeCode != null">notice_code = #{noticeCode},</if>
			<if test="zipBid != null">notice_code = #{zipBid},</if>
			<if test="dmhFlag != null">dmh_flag = #{dmhFlag},</if>
			<if test="archiveNo != null">archive_no = #{archiveNo},</if>
			<if test="zipfileName != null">zipfile_name = #{zipfileName},</if>
			<if test="noticeType != null">notice_type = #{noticeType.noticeTypeId},</if>
			<if test="zipfileName != null">zipfile_name = #{zipfileName},</if>
			patent = #{patent.patentId}
	</insert>
	
	<update id="updateNoticesProcessStatus">
		update notices set process_status = #{noticeProcessStatus}
		 where notice_id in 
		<foreach item="noticeId" collection="noticeIdList" open="(" separator="," close=")">
			#{noticeId}
		</foreach>		 
	</update>
	
	<update id="updateNoticePaperApplyType">
		update notices set paper_apply_type = #{paperApplyType}
		 where notice_id = #{noticeId}
	</update>
	
	<select id="getAllNoticeProcessStatus" resultMap="NoticeProcessStatusResultMap">
		select notice_process_status_id,  notice_process_status_desc
		  from notice_process_status
	</select>
	
	<select id="getAllNoticePaperApplyType" resultMap="NoticePaperApplyTypeResultMap">
		select notice_paper_apply_type_id,  notice_paper_apply_type_desc
		  from notice_paper_apply_types
	</select>	
	
	<select id="getAllNoticeType" resultType="NoticeType">
		select notice_type_id as noticeTypeId,  notice_type_desc as noticeTypeDescription
		  from notice_types
	</select>		
</mapper>