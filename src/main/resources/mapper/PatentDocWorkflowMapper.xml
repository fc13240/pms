<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lotut.pms.dao.mapper.PatentDocWorkflowMapper">
		<resultMap type="PatentDocOrder" id="PatentDocOrderMap">
		<id property="id" column="order_id"/>
		<result property="createTime" column="create_time"/>
		<result property="payTime" column="pay_time"/>
		<result property="amount" column="amount"/>
		<result property="orderStatus" column="order_status"/>
		<association property="paymentMethod" javaType="PaymentMethod">
			<id property="paymentMethodId" column="paymethod_id"/>
			<result property="paymentMethod" column="payment_method"/>
		</association>
		<association property="owner" resultMap="com.lotut.pms.dao.mapper.UserMapper.UserResultMap"/>
		<collection property="patentDocList" resultMap="com.lotut.pms.dao.mapper.PatentDocMapper.PatentDocMap"/>
		
		
	</resultMap>

	<insert id="insertOrder" parameterType="Order" useGeneratedKeys="true" keyProperty="id">
		insert into patent_doc_orders( amount, user, create_time) 
		values( #{amount,javaType=double,jdbcType=DOUBLE}, #{owner.userId}, now())
	</insert>
	
	<insert id="insertOrderItems">
		insert into patent_doc_order_items(order_id, patent_doc_id) values
		<foreach item="orderItem" collection="orderItems" separator=",">
			(#{orderItem.orderId}, #{orderItem.patentDocId})
		</foreach>;
	</insert>	
	
	<select id="getOrderById" parameterType="long" resultMap="PatentDocOrderMap">
		SELECT *
		FROM patent_doc_orders o 
		LEFT JOIN payment_methods pm ON pm.payment_method_id = o.payment_method
		LEFT JOIN patent_doc_order_items pit ON o.order_id=pit.order_id
		LEFT JOIN patent_documents p ON p.patent_doc_id=pit.patent_doc_id
		JOIN users u ON o.user = u.user_id
		WHERE o.order_id = #{orderId}
	</select>
	
		<update id="updateOrderStatus">
		update patent_doc_orders set order_status = #{status}, payment_method=1
			<if test="status == 1">
			, pay_time = now()
			</if> 
		where order_id = #{orderId}
	</update>
	
	<update id="updatePatentDocStatus" >
		update patent_documents set patent_doc_status = #{status}
		where patent_doc_id in
		<foreach item="patentDocId" collection="patentDocIdList" open="(" separator="," close=")">
			#{patentDocId}
		</foreach>			
	</update>
	
	
	<update id="updatePatentDocProxyStatus" >
		update patent_documents set patent_doc_proxy_status = #{status}
		where patent_doc_id in
		<foreach item="patentDocId" collection="patentDocIdList" open="(" separator="," close=")">
			#{patentDocId}
		</foreach>			
	</update>
	
<!-- 	<delete id="redistributePatentDoc">
		delete from user_patent_docs where user_id in 
		<foreach item="userId" collection="userIds"
			     open="(" separator="," close=")">
			   #{userId}
		</foreach>		
	</delete>
	
	<select id="getUserIdFromUserPatentDocs" parameterType="int" resultType="int">
		select user_id from user_patent_docs where patent_doc =(#{patentDocId})
	</select> -->
	
	<select id="getLastHistoryIdByWorkflowHistory"  resultType="int">
		select history_id from patent_doc_workflow_history where patent_doc_id=(#{patentDocId}) and 
		user_id=(#{userId}) and ACTION=(#{action}) 
		order by action_time desc limit 1;
	</select>
	
	
	<select id="getTargetByHistoryId" resultType="int" >
		select target from patent_doc_workflow_target where history = (#{history}) and patent_doc =(#{patentDocId})
	</select>
	
	<update id="redistributePatentDoc" >
		update user_patent_docs set user_id =(#{userId}) where patent_doc = (#{patentDoc}) and user_id =(#{target})
	</update>
	
	<select id="getCountByWorkflowHistory"  resultType="int">
		select count(history_id) from patent_doc_workflow_history where patent_doc_id=(#{patentDocId}) and 
		user_id=(#{userId}) and ACTION=(#{action}) 
	</select>
	
	<delete id="deleteByWorkflowHistory">
		delete from user_patent_docs where patent_doc = (#{patentDoc}) and user_id =(#{target})
	</delete>
</mapper>