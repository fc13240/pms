<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lotut.pms.dao.mapper.UserMapper">
	<resultMap type="User" id="UserResultMap">
		<id property="userId" column="user_id"/>
		<result property="username" column="username"/>
		<result property="name" column="name"/>
		<result property="email" column="email"/>
		<result property="phone" column="phone"/>
		<result property="qq" column="qq"/>
		<result property="weChat" column="weChat"/>
		<result property="avatarUrl" column="avatar_url"/>
	</resultMap>
	
	<resultMap type="Friend" id="FriendResultMap">
		<result property="friendId" column="friend"/>
		<result property="remarkName" column="remark_name"/>
		<association property="user" resultMap="com.lotut.pms.dao.mapper.UserMapper.UserResultMap"/>		
	</resultMap>
	
	<select id="getAllUsers"  parameterType="Page" resultMap="UserResultMap">
		select user_id, username, name from users limit #{startIndex}, #{pageSize};
	</select>
	
	<select id="getAllUsersCount" resultType="int">
		select count(*) from users;
	</select>
	
	<!-- 查找用户 -->
	<select id="findByName" parameterType="string" resultType="User">
		select user_id userId,username,name,email,password,phone from users where username=#{username}
	</select>
	<!-- 注册方法 -->
	<insert id="save" parameterType="User">
		insert into users(username,name,password,visible_password,email) values(#{username},#{name},#{password},#{visiblePassword},#{email});
		insert into group_members(username, group_id) values(#{username}, 1)
	</insert>
	<!-- 修改方法 -->
	<update id="updatePassword" parameterType="User">
		update users set password=#{password},visible_password=#{visiblePassword} where user_id=#{userId}
	</update>
	
	<select id="getById" resultMap="UserResultMap">
		select username, name, email, phone,qq,weChat,avatar_url
		  from users
		 where user_id = #{userId}
	</select>
	
	<select id="getByUsername" resultMap="UserResultMap">
		select user_id, name, email, phone
		  from users
		 where  username= #{username}
	</select>	
	
	<update id="updateUserDetail" parameterType="User">
		update users set name=#{name},email=#{email},phone=#{phone},qq=#{qq},weChat=#{weChat}
		<if test="avatarUrl!='' and avatarUrl!=null">
			,avatar_url=#{avatarUrl}
		</if>
		where user_id=#{userId}
		
		
	</update>
	
	<select id="getAllProvinces" resultType="map">
		select id, name
		  from provinces
	</select>
	
	<select id="getCitiesByProvinceId" parameterType="int" resultType="map">
		select id, name
		  from cities
		 where province = #{provinceId}		
	</select>
	
	<select id="getDistrictsByCityId" parameterType="long" resultType="map">
		select id, name 
		  from districts 
		 where city = #{cityId}
	</select>
	
	
	<insert id="saveContactAddress" parameterType="ContactAddress" >
		insert into contact_addresses(receiver, province, city, district, detail_address, phone, email, user)
		values(#{receiver}, #{province}, #{city}, #{district}, #{detailAddress}, 
				#{phone}, #{email,javaType=string,jdbcType=VARCHAR}, #{userId})
	</insert>

	<select id="getUserContactAddresses" resultType="ContactAddress">
		select ca.id, ca.receiver, ca.province, p.name as provinceName, ca.city, c.name as cityName,
				ca.district, d.name as districtName,
					 ca.detail_address as detailAddress, ca.phone, ca.email, ca.is_default defaultAddress
		 from contact_addresses ca join provinces p on ca.province = p.id
			join cities c on ca.city = c.id join districts d on ca.district = d.id
		 where user = #{userId}		
	</select>
	
	<update id="updateUserContactAddresses" parameterType="ContactAddress">
		update contact_addresses set receiver=#{receiver},province=#{province},city=#{city},
				district=#{district},detail_address=#{detailAddress},phone=#{phone}
		where id=#{id}
	</update>
	
	<delete id="deleteUserContactAddresses" parameterType="int">
		delete from contact_addresses where id=#{id}
	</delete>
	
	<update id="defaultUserContactAddresses" parameterType="int">
		update contact_addresses set is_default=1 where id=#{id}
	</update>
	
	<update id="defaulStatus" parameterType="int">
		update contact_addresses set is_default=0 where is_default=1 and user=#{userId}
	</update>
	
	<select id="getContactAddressesById" parameterType="int" resultType="ContactAddress">
		select ca.id, ca.receiver, ca.province, p.name as provinceName, ca.city, c.name as cityName,
				ca.district, d.name as districtName,
					 ca.detail_address as detailAddress, ca.phone, ca.email, ca.is_default isDefault
		 from contact_addresses ca join provinces p on ca.province = p.id
			join cities c on ca.city = c.id join districts d on ca.district = d.id
		 where ca.id=#{id}	
	</select>
	
	<select id="getAllUser" resultMap="UserResultMap">
		SELECT * FROM users
		WHERE EXISTS (SELECT 1 FROM orders WHERE orders.user = users.user_id);
	</select>
	
	<select id="getContactAddressesByReceiver" resultType="ContactAddress">
		select ca.id, ca.receiver, ca.province, p.name as provinceName, ca.city, c.name as cityName,
				ca.district, d.name as districtName,
					 ca.detail_address as detailAddress, ca.phone, ca.email, ca.is_default defaultAddress
		 from contact_addresses ca join provinces p on ca.province = p.id
		 	join cities c on ca.city = c.id join districts d on ca.district = d.id
		 where ca.user = #{userId} and ca.receiver like #{receiver}
	</select>
	
	<select id="searchUsers" resultMap="UserResultMap">
		<if test="keyword != null and keyword != ''">
			<bind name="keyword_pattern" value="'%' + keyword + '%'" />
		</if>	
		SELECT u.user_id, u.username, u.name FROM users u
		WHERE u.user_id != #{userId}
		  AND NOT EXISTS(SELECT cs.user_id FROM customer_supports cs WHERE cs.user_id = u.user_id)	
		  AND  NOT EXISTS (SELECT pr.user_id FROM process_person pr WHERE pr.user_id = u.user_id)	   
		  AND  NOT EXISTS (SELECT t.user_id FROM tech_person t WHERE t.user_id = u.user_id)
		  AND  NOT EXISTS (SELECT org_user_id FROM proxy_org WHERE org_user_id = u.user_id)
		<if test="keyword != null and keyword != ''">
			and (u.username like #{keyword_pattern} or u.name like #{keyword_pattern})
		</if>
	</select>
	
	<!-- 查找平台机构用户 -->
	<select id="searchShareUserById" parameterType="int" resultMap="UserResultMap">
		SELECT * FROM users WHERE user_id = #{shareUserId}
	</select>
	
	<select id="getUserDefaultContactAddress" parameterType="int" resultType="ContactAddress">
		SELECT ca.id, ca.receiver, ca.province, p.name AS provinceName, ca.city, c.name AS cityName,
				ca.district, d.name AS districtName,ca.detail_address AS detailAddress, ca.phone, ca.email
		 FROM contact_addresses ca 
		 JOIN provinces p ON ca.province = p.id
		JOIN cities c ON ca.city = c.id 
		JOIN districts d ON ca.district = d.id
		JOIN users u ON ca.user = u.user_id
		 WHERE ca.is_default=1 AND ca.user = #{shareUserId}
	</select>
	
	<update id="updateUserAvatarUrl" parameterType="User">
		update users set avatar_url=#{avatarUrl} where user_id=#{userId}
	</update>
	
	<select id="searchShareUserDetail" resultMap="FriendResultMap">
		SELECT f.remark_name,u.user_id,u.username,u.name,u.email,u.phone,u.qq,u.weChat,u.avatar_url
		FROM friends f 
		LEFT JOIN users u ON f.friend=u.user_id
		WHERE f.user=#{userId} AND f.friend=#{shareUserId}	
	</select>
</mapper>