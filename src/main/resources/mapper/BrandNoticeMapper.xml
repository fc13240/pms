<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lotut.pms.dao.mapper.BrandNoticeMapper">
	<resultMap type="NoticeProcessStatus" id="NoticeProcessStatusResultMap">
		<id property="processStatusId" column="notice_process_status_id"/>
		<result property="processStatusDescription" column="notice_process_status_desc"/>
	</resultMap>
	
	<resultMap type="NoticePaperApplyType" id="NoticePaperApplyTypeResultMap">
		<id property="paperTypeId" column="notice_paper_apply_type_id"/>
		<result property="paperTypeDescription" column="notice_paper_apply_type_desc"/>	
	</resultMap>
	
	<resultMap type="BrandNoticeType" id="BrandNoticeTypeResultMap">
		<id property="noticeTypeId" column="notice_type_id"/>
		<result property="noticeTypeDescription" column="notice_type_desc"/>	
	</resultMap>
	
	<resultMap type="BrandNotice" id="BrandNoticeResultMap">
		<id property="noticeId" column="notice_id"/>
		<result property="name" column="notice_name"/>
		<result property="noticeSequence" column="notice_sequence"/>
		<result property="dispatchSequence" column="dispatch_sequence"/>
		<result property="dispatchDate" column="dispatch_date"/>
		<result property="remainDays" column="remain_days"/>
		<result property="noticeCode" column="notice_code"/>
		<result property="zipBid" column="zip_bid"/>
		<result property="dmhFlag" column="dmh_flag"/>
		<result property="archiveNo" column="archive_no"/>
		<result property="zipfileName" column="zipfile_name"/>
		<result property="noticeViewStatus" column="notice_view_status"/>
		<result property="starTargetMonitorStatus" column="star_target_monitor_status"/>
		<association property="processStatus" resultMap="NoticeProcessStatusResultMap"/>
		<association property="paperApplyType"  javaType="NoticePaperApplyType">
			<id property="paperTypeId" column="paper_type_id"/>
			<result property="paperTypeDescription" column="paper_type_description"/>
		</association>
		<association property="processUser"  javaType="User">
			<id property="userId" column="process_user_id"/>
			<result property="username" column="process_username"/>
		</association>
		<association property="noticeType"  javaType="BrandNoticeType">
			<id property="noticeTypeId" column="notice_type_id"/>
			<result property="noticeTypeDescription" column="notice_type_desc"/>
		</association>
		<association property="brandLegalStatus" resultMap="com.lotut.pms.dao.mapper.BrandManagementMapper.BrandLegalStatusResultMap"/>
		<association property="brand" resultMap="com.lotut.pms.dao.mapper.BrandManagementMapper.brandManagementResultMap"/>
			
	</resultMap>

	<resultMap type="BrandNoticeRemark" id="BrandNoticeRemarkMap">
		<id column="remarkId" property="remark_id"/>
		<result property="remarkTime" column="remark_time"/>
		<result property="content" column="content"/>
		<result property="brandNotice" column="brand_notice"/>
		<association property="user" javaType="User">
			<id property="userId" column="user_id"/>
			<result property="username" column="username"/>
		</association>
	</resultMap>
	
	<resultMap type="BrandNoticeTypeCount" id="BrandNoticeTypeCountMap">
		<result property="noticeTypeId" column="notice_type_id"/>
		<result property="noticeTypeDescription" column="notice_type_desc"/>
		<result property="noticeCount" column="noticeCount"/>
	</resultMap>
	
	<select id="getUserBrandNoticeList" parameterType="Page" resultMap="BrandNoticeResultMap">
  		SELECT rs.*,u.user_id,u.username FROM (
		SELECT b.id,bc.category_id,bc.category_name,b.app_no,b.brand_no,b.name,b.image_url,b.app_person,b.transaction_status,
			b.app_date,bmn.dispatch_date,bls.legal_status_id,bls.legal_status_name,bmn.star_target_monitor_status,
			nvl.notice_id AS notice_view_status,bnt.notice_type_id,bnt.notice_type_desc,bmn.notice_id,bmn.notice_name
		FROM brand_management_notices bmn 
		LEFT JOIN brand_management b ON bmn.brand=b.id			
		LEFT JOIN brand_category bc ON  b.category_id=bc.category_id 
		LEFT JOIN brand_legal_status bls ON b.legal_status=bls.legal_status_id
		LEFT JOIN brand_notice_read nvl ON bmn.notice_id=nvl.notice_id AND nvl.user_id = #{userId}
		LEFT JOIN brand_notice_types bnt ON bmn.notice_type=bnt.notice_type_id
		WHERE b.id IN (SELECT brand FROM user_brand_management  WHERE USER =#{userId} and trash_status=1) 
		LIMIT #{startIndex},#{pageSize}
		) rs
		LEFT JOIN user_brand_management ubm ON ubm.brand=rs.id
		LEFT JOIN users u ON u.user_id=ubm.user
  	</select>
  	
	<select id="getUserBrandNoticeCount" parameterType="int" resultType="int">
  		select count(*) FROM brand_management_notices bmn 
		LEFT JOIN brand_management b ON bmn.brand=b.id	
  		where b.id in (select brand from user_brand_management where user =#{userId} and trash_status=1) 
  	</select>
  	
  	<select id="getUserBrandNoticeExcelData" resultMap="BrandNoticeResultMap">
		select bmn.notice_id,bm.id,bc.category_id,bc.category_name,bm.app_no,bm.brand_no,bm.name,bm.app_person,bm.app_date,bmn.dispatch_date,
			   bls.legal_status_id,bls.legal_status_name,bmn.notice_name,bmn.notice_code,u.user_id,u.username,
			   if(datediff(current_date,bmn.dispatch_date)>=0,datediff(current_date,bmn.dispatch_date),-1) as remain_days,
			   bnt.notice_type_id,bnt.notice_type_desc,npat.notice_paper_apply_type_id,npat.notice_paper_apply_type_desc,
			   nps.notice_process_status_id,nps.notice_process_status_desc
		   from  brand_management bm left join brand_management_notices bmn on bmn.brand=bm.id
			 left join brand_category bc on bm.category_id=bc.category_id
			 left join brand_legal_status bls on bm.legal_status=bls.legal_status_id
			 left join brand_notice_types bnt on bmn.notice_type=bnt.notice_type_id
			 left join notice_paper_apply_types npat on bmn.paper_apply_type=npat.notice_paper_apply_type_id
			 left join notice_process_status nps on bmn.process_status=nps.notice_process_status_id
			 left join user_brand_management ubm on bm.id
			 left join users u on ubm.user=u.user_id
			 where bmn.notice_id in 
			 <foreach collection="noticeIds" item="noticeId" open="(" close=")" separator=",">
			 	#{noticeId}
			 </foreach>

  	</select>  	
	
	<insert id="saveBrandNoticeRemark" parameterType="BrandNoticeRemark">
		insert into brand_notice_remark(content,brand_notice,user) values(#{content},#{brandNotice},#{user.userId})
	</insert>
	
  	<insert id="batchChangeBrandNoticeViewStatus" parameterType="list">
		insert ignore into brand_notice_read(notice_id, user_id) 
		values
		<foreach item="noticeIdList" collection="list" separator=",">
			(#{noticeIdList.noticeId}, #{noticeIdList.userId})
		</foreach>
	</insert>
	
	<select id="searchUserBrandNoticeByPage" parameterType="BrandNoticeSearchCondition" resultMap="BrandNoticeResultMap">
		<if test="keyword != null">
			<bind name="keyword_pattern" value="'%'+keyword+'%'"/>
		</if>
		SELECT rs.*,u.user_id,u.username FROM (
		SELECT b.id,bc.category_id,bc.category_name,b.app_no,b.brand_no,b.name,b.image_url,b.app_person,
			b.app_date,bmn.dispatch_date,bls.legal_status_id,bls.legal_status_name,bmn.star_target_monitor_status,
			nvl.notice_id AS notice_view_status,bnt.notice_type_id,bnt.notice_type_desc,bmn.notice_id,bmn.notice_name
		FROM brand_management_notices bmn 
		LEFT JOIN brand_management b ON bmn.brand=b.id			
		LEFT JOIN brand_category bc ON  b.category_id=bc.category_id 
		LEFT JOIN brand_legal_status bls ON b.legal_status=bls.legal_status_id
		LEFT JOIN brand_notice_read nvl ON bmn.notice_id=nvl.notice_id AND nvl.user_id = #{page.userId}
		LEFT JOIN brand_notice_types bnt ON bmn.notice_type=bnt.notice_type_id
		WHERE b.id IN (SELECT brand FROM user_brand_management  WHERE USER =#{page.userId} and trash_status=1)  
		<if test="brandCategory != null">
			AND b.category_id = #{brandCategory}
		</if>
		<if test="brandLegalStatus != null">
			AND b.legal_status = #{brandLegalStatus}
		</if>
		<if test="dispatchDate != null">
			AND b.dispatch_date = #{dispatchDate}
		</if>
		<if test="noticeType != null">
			AND bmn.notice_type = #{noticeType}
		</if>
		<if test="keyword != null and keyword !=''">
			AND  (b.app_no like #{keyword_pattern} or b.brand_no like #{keyword_pattern}
				or b.name like #{keyword_pattern} or b.similar_no like #{keyword_pattern} or b.app_person like #{keyword_pattern}
				or b.scope like #{keyword_pattern})
		</if>
		
		LIMIT #{page.startIndex},#{page.pageSize}
		) rs
		LEFT JOIN user_brand_management ubm ON ubm.brand=rs.id
		LEFT JOIN users u ON u.user_id=ubm.user
	</select>
	
	<select id="searchBrandNoticeCountByPage" parameterType="BrandNoticeSearchCondition" resultType="int">
		<if test="keyword != null">
			<bind name="keyword_pattern" value="'%'+keyword+'%'"/>
		</if>
		SELECT count(*) FROM brand_management_notices bmn 
		LEFT JOIN brand_management b ON bmn.brand=b.id			
		LEFT JOIN brand_category bc ON  b.category_id=bc.category_id 
		LEFT JOIN brand_legal_status bls ON b.legal_status=bls.legal_status_id
		LEFT JOIN brand_notice_read nvl ON bmn.notice_id=nvl.notice_id AND nvl.user_id = #{page.userId}
		LEFT JOIN brand_notice_types bnt ON bmn.notice_type=bnt.notice_type_id
		WHERE b.id IN (SELECT brand FROM user_brand_management  WHERE USER =#{page.userId} and trash_status=1) 
		<if test="brandCategory != null">
			AND b.category_id = #{brandCategory}
		</if>
		<if test="brandLegalStatus != null">
			AND b.legal_status = #{brandLegalStatus}
		</if>
		<if test="dispatchDate != null">
			AND b.dispatch_date = #{dispatchDate}
		</if>
		<if test="noticeType != null">
			AND bmn.notice_type = #{noticeType}
		</if>
		<if test="keyword != null">
			AND (b.app_no like #{keyword_pattern} or b.brand_no like #{keyword_pattern}
				or b.name like #{keyword_pattern} or b.similar_no like #{keyword_pattern} or b.app_person like #{keyword_pattern}
				or b.scope like #{keyword_pattern})
		</if>
	</select>
	
	<select id="getBrandNoticeListByNoticeId" parameterType="long" resultMap="BrandNoticeRemarkMap">
		select bnr.remark_id,bnr.remark_time,bnr.content,bnr.brand_notice,u.user_id,u.username from brand_notice_remark bnr left join users 
		u on bnr.user=u.user_id where bnr.brand_notice=#{brandNoticeId}
	</select>
	
	<update id="batchUpdateStarTargetStatus" parameterType="list">
	 	update brand_management_notices  set star_target_monitor_status=1 where notice_id in
	 	<foreach collection="noticeIds" item="noticeId" open="(" close=")" separator=",">
	 		#{noticeId}
	 	</foreach>
	</update>

	<select id="getBrandNoticeTypes" resultMap="BrandNoticeTypeResultMap">
		select notice_type_id,notice_type_desc from brand_notice_types
	</select>
	
	<select id="getBrandNoticeCountByNoticeType" parameterType="int" resultMap="BrandNoticeTypeCountMap">
		select bnt.notice_type_id,bnt.notice_type_desc,count(*) noticeCount from brand_management_notices bmn 
		LEFT JOIN brand_management b ON bmn.brand=b.id			
		LEFT JOIN brand_category bc ON  b.category_id=bc.category_id 
		LEFT JOIN brand_legal_status bls ON b.legal_status=bls.legal_status_id
		LEFT JOIN brand_notice_read nvl ON bmn.notice_id=nvl.notice_id AND nvl.user_id = #{userId}
		LEFT JOIN brand_notice_types bnt ON bmn.notice_type=bnt.notice_type_id 
		WHERE b.id IN (SELECT brand FROM user_brand_management  WHERE USER =#{userId} and trash_status=1) 
		group by bnt.notice_type_id order by bnt.notice_type_id asc 
	</select>
	
	<insert id="saveBrandNotice" parameterType="BrandNotice">
		insert into brand_management_notices(brand,dispatch_date,zipfile_name,notice_type) values(#{brand.id},#{dispatchDate},#{zipfileName},#{noticeType.noticeTypeId})
	</insert>
	
	<select id="getAllBrandNoticeCountByUserId" parameterType="int" resultType="int">
		select count(*) from brand_management_notices bmn 
		LEFT JOIN brand_management b ON bmn.brand=b.id			
		LEFT JOIN brand_category bc ON  b.category_id=bc.category_id 
		LEFT JOIN brand_legal_status bls ON b.legal_status=bls.legal_status_id
		LEFT JOIN brand_notice_read nvl ON bmn.notice_id=nvl.notice_id AND nvl.user_id = #{userId}
		LEFT JOIN brand_notice_types bnt ON bmn.notice_type=bnt.notice_type_id 
		WHERE b.id IN (SELECT brand FROM user_brand_management  WHERE USER =#{userId} and trash_status=1) 
	</select>
</mapper>