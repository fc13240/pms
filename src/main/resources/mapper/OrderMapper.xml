<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lotut.pms.dao.mapper.OrderMapper">
	<insert id="insertOrder" parameterType="Order" useGeneratedKeys="true" keyProperty="id">
		insert into orders(post_address, amount, user, create_time,invoice,express_fee,service_fee,invoice_fee) 
		values(<choose>
		<when test="postAddress != null and postAddress.id != 0">
			#{postAddress.id}
		</when>
		<otherwise>
			null
		</otherwise>
		</choose>, #{amount}, #{owner.userId}, now(),#{invoice,jdbcType=VARCHAR},#{expressFee},#{serviceFee},#{invoiceFee})
	</insert>
	
	<insert id="insertOrderItems">
		insert into order_items(order_id, fee_id) values
		<foreach item="orderItem" collection="orderItems" separator=",">
			(#{orderItem.orderId}, #{orderItem.feeId})
		</foreach>;
	</insert>	

	<resultMap type="ContactAddress" id="PostAddressMap">
		<id property="id" column="address_id"/>
		<result property="receiver" column="receiver"/>
		<result property="provinceName" column="provinceName"/>
		<result property="cityName" column="cityName"/>
		<result property="districtName" column="districtName"/>
		<result property="streetName" column="streetName"/>
		<result property="detailAddress" column="detailAddress"/>
		<result property="phone" column="phone"/>
	</resultMap>	
	
	<resultMap type="OrderStatus" id="OrderStatusResultMap">
		<id property="statusId" column="order_status_id"/>
		<result property="statusDescription" column="status_description"/>
	</resultMap>
			
		
	<resultMap type="Order" id="OrderMap">
		<id property="id" column="order_id"/>
		<result property="createTime" column="create_time"/>
		<result property="payTime" column="pay_time"/>
		<result property="expressCompany" column="express_company"/>
		<result property="invoice" column="invoice"/>
		<result property="expressNo" column="express_no"/>
		<result property="sendTime" column="send_time"/>
		<result property="courier" column="courier"/>
		<result property="courierPhone" column="courier_phone"/>
		<result property="amount" column="totalAmount"/>
		<result property="expressFee" column="express_fee"/>
		<result property="serviceFee" column="service_fee"/>
		<result property="invoiceFee" column="invoice_fee"/>
		<association property="postAddress" resultMap="PostAddressMap"/>
		<association property="paymentMethod" javaType="PaymentMethod">
			<id property="paymentMethodId" column="paymethod_id"/>
			<result property="paymentMethod" column="payment_method"/>
		</association>
		<association property="owner" resultMap="com.lotut.pms.dao.mapper.UserMapper.UserResultMap"/>
		
		<association property="orderStatus" resultMap="OrderStatusResultMap">
		</association>
		
		<collection property="feeList"  resultMap="com.lotut.pms.dao.mapper.FeeMapper.FeeResultMap"/>
	</resultMap>

	<delete id="deleteUserOrder">
		update fees set fee_payment_status = 1 where fee_id in (select fee_id from order_items where order_id =#{orderId});
		delete from orders where order_id=#{orderId} and user = #{userId}
	</delete>
	
	<select id="getUserOrdersCount" resultType="int">
		select count(*) from orders where user = #{userId}
	</select>
	
	<select id="selectUserOrders" parameterType="Page" resultMap="OrderMap">
		SELECT od.create_time, od.totalAmount, od.order_id, od.address_id, od.receiver, 
				od.order_status_id, od.status_description, p.patent_id, p.app_no, p.patent_name, 
				p.app_person, ps.patent_status_id, ps.patent_status_desc, f.fee_id, f.deadline,
				f.amount, f.fee_type, f.invoice_title, fs.fee_payment_status_id, fs.fee_payment_status_desc,
				od.user_id, od.username, od.name
  		FROM 
				(SELECT o.create_time, o.amount totalAmount, o.order_id, ca.id AS address_id, ca.receiver, os.order_status_id, os.status_description,
					u.user_id, u.username, u.name
				  FROM orders o JOIN order_status os ON o.order_status = os.order_status_id
					LEFT JOIN contact_addresses ca ON o.post_address = ca.id
					join users u on o.user = u.user_id
				 WHERE o.user = #{userId}
				 ORDER BY o.create_time desc
				limit #{startIndex}, #{pageSize}) od
			  JOIN order_items oi ON od.order_id = oi.order_id
			  JOIN fees f ON f.fee_id = oi.fee_id
			  JOIN patents p ON f.patent = p.patent_id
			  JOIN patent_status ps ON p.patent_status = ps.patent_status_id
			  JOIN fee_payment_status fs ON f.fee_payment_status = fs.fee_payment_status_id
	</select>
	
	<select id="searchUserOrdersByPage" parameterType="OrderSearchCondition" resultMap="OrderMap">
		<if test="keyword != null">
			<bind name="keyword_pattern" value="'%' + keyword + '%'" />
		</if>	
		 SELECT od.create_time, od.totalAmount, od.order_id, od.address_id, od.receiver, 
				od.order_status_id, od.status_description, p.patent_id, p.app_no, p.patent_name, 
				p.app_person, ps.patent_status_id, ps.patent_status_desc, f.fee_id, f.deadline,
				f.amount, f.fee_type, f.invoice_title, fs.fee_payment_status_id, fs.fee_payment_status_desc
  		FROM 
				(SELECT o.create_time, o.amount totalAmount, o.order_id, ca.id AS address_id, ca.receiver, os.order_status_id, os.status_description
				  FROM orders o JOIN order_status os ON o.order_status = os.order_status_id
					LEFT JOIN contact_addresses ca ON o.post_address = ca.id
				 WHERE o.user = #{userId}
			 	<if test="orderStatus != null">
			 		and o.order_status = #{orderStatus}
			 	</if>	
			 	<if test="startAppDate != null">
			 		and o.create_time >= #{startAppDate}
			 	</if>	
			 	<if test="endAppDate != null">
			 		<![CDATA[ and DATE_FORMAT(o.create_time, '%Y-%m-%d') <= #{endAppDate} ]]>
			 	</if>	
			 	<if test="keyword != null">
					and (o.order_id like #{keyword_pattern})
				</if>
				 ORDER BY o.create_time desc
				limit #{page.startIndex}, #{page.pageSize}) od
			  JOIN order_items oi ON od.order_id = oi.order_id
			  JOIN fees f ON f.fee_id = oi.fee_id
			  JOIN patents p ON f.patent = p.patent_id
			  JOIN patent_status ps ON p.patent_status = ps.patent_status_id
			  JOIN fee_payment_status fs ON f.fee_payment_status = fs.fee_payment_status_id
	</select>
	
	
	<select id="searchUserOrdersCount" resultType="int">
		<if test="keyword != null">
			<bind name="keyword_pattern" value="'%' + keyword + '%'" />
		</if>	
		SELECT count(*)
		  FROM orders o 
		 WHERE o.user = #{userId}
	 	<if test="orderStatus != null">
	 		and o.order_status = #{orderStatus}
	 	</if>	
	 	<if test="startAppDate != null">
	 		and o.create_time >= #{startAppDate}
	 	</if>	
	 	<if test="endAppDate != null">
	 		<![CDATA[ and o.create_time <= #{endAppDate} ]]>
	 	</if>	
	 	<if test="keyword != null">
			and o.order_id like #{keyword_pattern}
		</if>
	
	</select>
	
	<select id="getOrderById" parameterType="long" resultMap="OrderMap">
		select  o.create_time, o.amount totalAmount, o.order_id,o.express_company,o.express_no,o.send_time, o.pay_time,
			o.invoice,o.express_fee,o.service_fee,invoice_fee,
			ca.id as address_id, ca.receiver, provinces.name provinceName, cities.name cityName,
			districts.name districtName, streets.name streetName, ca.detail_address detailAddress, ca.phone,
			os.order_status_id, os.status_description, p.patent_id, p.app_no, p.patent_name, p.app_person, 
			ps.patent_status_id, ps.patent_status_desc, f.fee_id, f.deadline, f.amount, f.fee_type, 
			f.invoice_title, fs.fee_payment_status_id, fs.fee_payment_status_desc,
			pm.payment_method_id, pm.payment_method
		from orders o join order_status os on o.order_status = os.order_status_id
			left join contact_addresses ca on o.post_address = ca.id
			join order_items oi on oi.order_id = o.order_id 
			join fees f on oi.fee_id = f.fee_id
		    join patents p on f.patent = p.patent_id
			join patent_status ps on p.patent_status = ps.patent_status_id
			join fee_payment_status fs on f.fee_payment_status = fs.fee_payment_status_id
			left join provinces on provinces.id = ca.province
			left join cities on cities.id = ca.city
			left join districts on districts.id = ca.district
			left join streets on streets.id = ca.street
			left join payment_methods pm on pm.payment_method_id = o.payment_method
		where o.order_id = #{orderId}		
	</select>
	
	<update id="updateOrderStatus">
		update orders set order_status = #{status}, payment_method=1
			<if test="status == 2">
			, pay_time = now()
			</if> 
		where order_id = #{orderId}
	</update>

	<select id="getAllNeedProcessOrderCount" resultType="int">
		select count(*) from orders where order_status in (2,3,4)
	</select>
	
	
	
	
	<select id="getAllNeedProcessOrders" parameterType="Page" resultMap="OrderMap">
		SELECT od.create_time, od.totalAmount, od.order_id, od.address_id, od.receiver, 
				od.order_status_id, od.status_description, p.patent_id, p.app_no, p.patent_name, 
				p.app_person, ps.patent_status_id, ps.patent_status_desc, f.fee_id, f.deadline,
				f.amount, f.fee_type, f.invoice_title, fs.fee_payment_status_id, fs.fee_payment_status_desc,
				od.user_id, od.username, od.name
  		FROM 
				(SELECT o.create_time, o.amount totalAmount, o.order_id, ca.id AS address_id, ca.receiver, os.order_status_id, os.status_description,
					u.user_id, u.username, u.name
				  FROM orders o JOIN order_status os ON o.order_status = os.order_status_id
								
					LEFT JOIN contact_addresses ca ON o.post_address = ca.id
					join users u on o.user = u.user_id
				 WHERE o.order_status in (2,3,4)
				 ORDER BY o.create_time desc
				limit #{startIndex}, #{pageSize}) od
			  JOIN order_items oi ON od.order_id = oi.order_id
			  JOIN fees f ON f.fee_id = oi.fee_id
			  JOIN patents p ON f.patent = p.patent_id
			  JOIN patent_status ps ON p.patent_status = ps.patent_status_id
			  JOIN fee_payment_status fs ON f.fee_payment_status = fs.fee_payment_status_id	
	</select>	
	
	<select id="getUserOrdersByStatus" resultMap="OrderMap">
		select  o.create_time, o.amount totalAmount, o.order_id, ca.id as address_id, ca.receiver, os.order_status_id, os.status_description,
			p.patent_id, p.app_no, p.patent_name, p.app_person, ps.patent_status_id, ps.patent_status_desc,
			f.fee_id, f.deadline, f.amount, f.fee_type, f.invoice_title, fs.fee_payment_status_id, fs.fee_payment_status_desc
		from orders o join order_status os on o.order_status = os.order_status_id
			join contact_addresses ca on o.post_address = ca.id
			join order_items oi on oi.order_id = o.order_id 
			join fees f on oi.fee_id = f.fee_id
		  join patents p on f.patent = p.patent_id
			join patent_status ps on p.patent_status = ps.patent_status_id
			join fee_payment_status fs on f.fee_payment_status = fs.fee_payment_status_id
		where o.user = #{userId} and o.order_status = #{orderStatus}
		order by o.create_time desc		
	</select>
	
	<select id="getAllOrderStatus" resultMap="OrderStatusResultMap">
		select order_status_id, status_description
		  from order_status
		 order by order_status_id asc;
	</select>
	
	<update id="setUserOrderToPaidSuccess" parameterType="long">
		update orders set order_status=3 where order_id=#{orderId};
		update fees SET fee_payment_status=5 WHERE fee_id in
		(select fee_id from order_items where order_id=#{orderId})
	</update>
	
	<update id="setUserOrderToPaid" parameterType="long">
		update orders set order_status=4 where order_id=#{orderId};
		update fees SET fee_payment_status=3 WHERE fee_id in
		(select fee_id from order_items where order_id=#{orderId})
	</update>
	
	<update id="updateUserOrderExpress" parameterType="map">
		UPDATE orders SET express_no=#{expressNo},send_time=#{startDispatchDate}
		WHERE order_id=#{orderId}
	</update>
	
	
	
	<select id="getAllNeedProcessOrdersBySearch" parameterType="AdminOrderSearchCondition" resultMap="OrderMap">
		<if test="keyword != null">
			<bind name="keyword_pattern" value="'%' + keyword + '%'" />
		</if>	
		SELECT od.create_time, od.totalAmount, od.order_id, od.address_id, od.receiver, 
				od.order_status_id, od.status_description, p.patent_id, p.app_no, p.patent_name, 
				p.app_person, ps.patent_status_id, ps.patent_status_desc, f.fee_id, f.deadline,
				f.amount, f.fee_type, f.invoice_title, fs.fee_payment_status_id, fs.fee_payment_status_desc,
				od.user_id, od.username, od.name
  		FROM 
				(SELECT o.create_time, o.amount totalAmount, o.order_id, ca.id AS address_id, ca.receiver, os.order_status_id, os.status_description,
					u.user_id, u.username, u.name
				  FROM orders o JOIN order_status os ON o.order_status = os.order_status_id
					LEFT JOIN contact_addresses ca ON o.post_address = ca.id
					join users u on o.user = u.user_id
				 WHERE o.order_status in (2,3,4)
			 	<if test="orderStatus != null">
			 		and o.order_status = #{orderStatus}
			 	</if>	
			 	<if test="startAppDate != null">
			 		and o.create_time >= #{startAppDate}
			 	</if>	
			 	<if test="endAppDate != null">
			 		<![CDATA[ and DATE_FORMAT(o.create_time, '%Y-%m-%d') <= #{endAppDate} ]]>
			 	</if>	
			 	<if test="keyword != null">
					and (o.order_id like #{keyword_pattern})
				</if>
				 ORDER BY o.create_time desc
				limit #{page.startIndex}, #{page.pageSize}) od
			  JOIN order_items oi ON od.order_id = oi.order_id
			  JOIN fees f ON f.fee_id = oi.fee_id
			  JOIN patents p ON f.patent = p.patent_id
			  JOIN patent_status ps ON p.patent_status = ps.patent_status_id
			  JOIN fee_payment_status fs ON f.fee_payment_status = fs.fee_payment_status_id	
	</select>
	
	<select id="getAllNeedProcessOrdersBySearchCount"  resultType="int">
		<if test="keyword != null">
			<bind name="keyword_order" value="'%' + keyword + '%'" />
		</if>	
		SELECT count(*)
  		FROM 
				(SELECT o.create_time, o.amount totalAmount, o.order_id, ca.id AS address_id, ca.receiver, os.order_status_id, os.status_description,
					u.user_id, u.username, u.name
				  FROM orders o JOIN order_status os ON o.order_status = os.order_status_id
					LEFT JOIN contact_addresses ca ON o.post_address = ca.id
					join users u on o.user = u.user_id
				 WHERE o.order_status in (2,3,4)
			 	<if test="orderStatus != null">
			 		and o.order_status = #{orderStatus}
			 	</if>	
			 	<if test="startAppDate != null">
			 		and o.create_time >= #{startAppDate}
			 	</if>	
			 	<if test="endAppDate != null">
			 		<![CDATA[ and DATE_FORMAT(o.create_time, '%Y-%m-%d') <= #{endAppDate} ]]>
			 	</if>	
			 	<if test="keyword != null">
					and (o.order_id like #{keyword_order})
				</if>
				 ORDER BY o.create_time desc) od
			  JOIN order_items oi ON od.order_id = oi.order_id
			  JOIN fees f ON f.fee_id = oi.fee_id
			  JOIN patents p ON f.patent = p.patent_id
			  JOIN patent_status ps ON p.patent_status = ps.patent_status_id
			  JOIN fee_payment_status fs ON f.fee_payment_status = fs.fee_payment_status_id	
	</select>
	
	<update id="updateOrderFeesStatus">
		update fees set fee_payment_status = 4 where fee_id in
    	<foreach item="orderItem" collection="orderItems" open="(" separator="," close=")">
			#{orderItem.feeId}
 		</foreach>
	</update>
	
	
	<select id="searchUserOrdersByOrderStatus" resultType="map">
		SELECT o.order_status orderStatus,count(*) orderCount
		  FROM orders o 
		 WHERE o.user = #{userId} GROUP BY o.order_status;	 		 	
	</select>
		
	<select id="searchUserAllOrdersByOrderStatus" resultType="map">
		SELECT o.order_status orderStatus,count(*) orderCount
		  FROM orders o 
		GROUP BY o.order_status;	 		 	
	</select>	
</mapper>