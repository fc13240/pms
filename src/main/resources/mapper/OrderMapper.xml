<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lotut.pms.dao.mapper.OrderMapper">
	<insert id="insertOrder" parameterType="Order" useGeneratedKeys="true" keyProperty="id">
		insert into orders(post_address, amount, user) values(#{postAddress.id}, #{amount}, #{user})
	</insert>
	
	<insert id="insertOrderItems">
		insert into order_items(order_id, fee_id) values
		<foreach item="orderItem" collection="orderItems" separator=",">
			(#{orderItem.orderId}, #{orderItem.feeId})
		</foreach>		
	</insert>	

	<resultMap type="ContactAddress" id="PostAddressMap">
		<id property="id" column="address_id"/>
		<result property="receiver" column="receiver"/>
	</resultMap>	
		
	<resultMap type="Order" id="OrderMap">
		<id property="id" column="order_id"/>
		<result property="createTime" column="create_time"/>
		<result property="amount" column="totalAmount"/>
		<association property="postAddress" resultMap="PostAddressMap"/>
		<association property="orderStatus" javaType="OrderStatus">
			<id property="statusId" column="order_status_id"/>
			<result property="statusDescription" column="status_description"/>
		</association>
		<collection property="feeList"  resultMap="com.lotut.pms.dao.mapper.FeeMapper.FeeResultMap"/>
	</resultMap>
	
<!-- 	<select id="selectUserOrders" parameterType="int" resultMap="OrderMap"> -->
<!-- 		select  o.create_time, o.amount totalAmount, o.order_id, ca.id as address_id, ca.receiver, os.order_status_id, os.status_description, -->
<!-- 			p.patent_id, p.app_no, p.patent_name, p.app_person, ps.patent_status_id, ps.patent_status_desc, -->
<!-- 			f.fee_id, f.deadline, f.amount, f.fee_type, f.invoice_title, fs.fee_payment_status_id, fs.fee_payment_status_desc -->
<!-- 		from orders o join order_status os on o.order_status = os.order_status_id -->
<!-- 			join contact_addresses ca on o.post_address = ca.id -->
<!-- 			join order_items oi on oi.order_id = o.order_id  -->
<!-- 			join fees f on oi.fee_id = f.fee_id -->
<!-- 		  join patents p on f.patent = p.patent_id -->
<!-- 			join patent_status ps on p.patent_status = ps.patent_status_id -->
<!-- 			join fee_payment_status fs on f.fee_payment_status = fs.fee_payment_status_id -->
<!-- 		where o.user = #{userId} -->
<!-- 		order by o.create_time desc -->
<!-- 	</select> -->
	
	<update id="deleteUserOrders" parameterType="long">
		update orders set order_status=3 where order_id=#{orderId,javaType=long,jdbcType=BIGINT}
	</update>
	
	<select id="getUserOrdersCount" resultType="int">
		select count(*) from orders where user = #{userId}
	</select>
	
	<select id="selectUserOrders" parameterType="Page" resultMap="OrderMap">
		SELECT od.create_time, od.totalAmount, od.order_id, od.address_id, od.receiver, 
				od.order_status_id, od.status_description, p.patent_id, p.app_no, p.patent_name, 
				p.app_person, ps.patent_status_id, ps.patent_status_desc, f.fee_id, f.deadline,
				f.amount, f.fee_type, f.invoice_title, fs.fee_payment_status_id, fs.fee_payment_status_desc
  		FROM 
				(SELECT o.create_time, o.amount totalAmount, o.order_id, ca.id AS address_id, ca.receiver, os.order_status_id, os.status_description
				  FROM orders o JOIN order_status os ON o.order_status = os.order_status_id
					LEFT JOIN contact_addresses ca ON o.post_address = ca.id
				 WHERE o.user = #{userId}
				 ORDER BY o.create_time desc
				limit #{startIndex}, #{pageSize}) od
			  JOIN order_items oi ON od.order_id = oi.order_id
			  JOIN fees f ON f.fee_id = oi.fee_id
			  JOIN patents p ON f.patent = p.patent_id
			  JOIN patent_status ps ON p.patent_status = ps.patent_status_id
			  JOIN fee_payment_status fs ON f.fee_payment_status = fs.fee_payment_status_id
	</select>
	
	
	<select id="getOrderById" parameterType="long" resultMap="OrderMap">
		select  o.create_time, o.amount totalAmount, o.order_id, ca.id as address_id, ca.receiver, os.order_status_id, os.status_description,
			p.patent_id, p.app_no, p.patent_name, p.app_person, ps.patent_status_id, ps.patent_status_desc,
			f.fee_id, f.deadline, f.amount, f.fee_type, f.invoice_title, fs.fee_payment_status_id, fs.fee_payment_status_desc
		from orders o join order_status os on o.order_status = os.order_status_id
			join contact_addresses ca on o.post_address = ca.id
			join order_items oi on oi.order_id = o.order_id 
			join fees f on oi.fee_id = f.fee_id
		  join patents p on f.patent = p.patent_id
			join patent_status ps on p.patent_status = ps.patent_status_id
			join fee_payment_status fs on f.fee_payment_status = fs.fee_payment_status_id
		where o.order_id = #{orderId}		
	</select>
	
	<update id="updateOrderStatus">
		update orders set order_status = #{status} where order_id = #{orderId}
	</update>
</mapper>