<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lotut.pms.dao.mapper.FeeMapper">
	<resultMap type="Fee" id="FeeResultMap">
		<id property="feeId" column="fee_id"/>
		<result property="deadline" column="deadline"/>
		<result property="feeType" column="fee_type"/>
		<result property="amount" column="amount"/>
		<result property="invoiceTitle" column="invoice_title"/>
		<association property="paymentStatus" javaType="FeePaymentStatus">
			<id property="paymentStatusId" column="fee_payment_status_id"/>
			<result property="payementStatusDescription" column="fee_payment_status_desc"/>
		</association>
		<association property="monitorStatus" javaType="FeeMonitorStatus">
			<id property="monitorStatusId" column="fee_monitor_status_id"/>
			<result property="monitorStatusDescription" column="fee_monitor_status_desc"/>
		</association>		
		<association property="patent" javaType="Patent">
			<id property="patentId" column="patent_id"/>
			<result property="appNo" column="app_no"/>
			<result property="name" column="patent_name"/>
			<result property="appPerson" column="app_person"/>
			<association property="patentStatus" javaType="PatentStatus">
				<id property="patentStatusId" column="patent_status_id"/>
				<result property="statusDescription" column="patent_status_desc"/>			
			</association>
			<association property="patentType" javaType="PatentType">
				<id property="patentTypeId" column="patent_type_id"/>
				<result property="typeDescription" column="patent_type_desc"/>			
			</association>			
		</association>
	</resultMap>
	
	<select id="getFeesByPatentIds" resultMap="FeeResultMap">
		select p.patent_id, p.app_no, p.patent_name, p.app_person, ps.patent_status_id, ps.patent_status_desc,
					 f.fee_id, f.deadline, f.fee_type, f.amount, f.invoice_title, fp.fee_payment_status_id, fp.fee_payment_status_desc,
					 fs.fee_monitor_status_id, fs.fee_monitor_status_desc
		  from fees f join fee_monitor_status fs on f.fee_monitor_status = fs.fee_monitor_status_id
		       join fee_payment_status fp on f.fee_payment_status = fp.fee_payment_status_id
				left join users u on f.process_user = u.user_id join patents p on f.patent = p.patent_id
				join patent_status ps on p.patent_status = ps.patent_status_id
		 where f.fee_owner = #{userId} and f.patent in
		 <foreach item="patentId" collection="patentIds" open="(" separator="," close=")">
			 #{patentId}
		 </foreach>		
		 order by p.patent_id, f.deadline	 
	</select>
	
	<!-- 费用监控相关 -->
	<select id="getFeesForPatent" resultMap="FeeResultMap">
		select p.patent_id, p.app_no, p.patent_name, p.app_person, ps.patent_status_id, ps.patent_status_desc,
			 pt.patent_type_id, pt.patent_type_desc,			
			 f.fee_id, f.deadline, f.fee_type, f.amount, f.deadline,f.invoice_title, fp.fee_payment_status_id, fp.fee_payment_status_desc,
			 fs.fee_monitor_status_id, fs.fee_monitor_status_desc
		  from fees f join fee_monitor_status fs on f.fee_monitor_status = fs.fee_monitor_status_id
		       join fee_payment_status fp on f.fee_payment_status = fp.fee_payment_status_id
				left join users u on f.process_user = u.user_id join patents p on f.patent = p.patent_id
				join patent_status ps on p.patent_status = ps.patent_status_id join patent_types pt on p.patent_type = pt.patent_type_id
		  WHERE patent = (SELECT patent FROM fees WHERE fee_id = #{feeId}) AND fee_owner=#{userId}
	</select>
	
	
	<update id="updateMonitorStatus">
		update fees set fee_monitor_status = #{monitorStatus} 
		 where fee_id in
		<foreach item="feeId" collection="feeIds" open="(" separator="," close=")">
			 #{feeId}
		 </foreach>	
	</update>
	
	<!--  -->


	<select id="getUserMonitoredFees" parameterType="int" resultMap="FeeResultMap">
		select p.patent_id, p.app_no, p.patent_name, p.app_person, ps.patent_status_id, ps.patent_status_desc,
					 f.fee_id, f.deadline, f.fee_type, f.amount, f.invoice_title, fp.fee_payment_status_id, fp.fee_payment_status_desc,
					 fs.fee_monitor_status_id, fs.fee_monitor_status_desc
		  from fees f join fee_monitor_status fs on f.fee_monitor_status = fs.fee_monitor_status_id
		       join fee_payment_status fp on f.fee_payment_status = fp.fee_payment_status_id
				left join users u on f.process_user = u.user_id join patents p on f.patent = p.patent_id
				join patent_status ps on p.patent_status = ps.patent_status_id
		 where f.fee_owner = #{userId} and f.fee_monitor_status = 2
		 order by p.patent_id, f.deadline	
	</select>
	
	
	<!-- CS:分页 -->
	<select id="getUserMonitoredFeesByPage" parameterType="Page" resultMap="FeeResultMap">
		select p.patent_id, p.app_no, p.patent_name, p.app_person, ps.patent_status_id, ps.patent_status_desc,
					 f.fee_id, f.deadline, f.fee_type, f.amount, f.invoice_title, fp.fee_payment_status_id, fp.fee_payment_status_desc,
					 fs.fee_monitor_status_id, fs.fee_monitor_status_desc
		  from (fees f join fee_monitor_status fs on f.fee_monitor_status = fs.fee_monitor_status_id
		       join fee_payment_status fp on f.fee_payment_status = fp.fee_payment_status_id
				left join users u on f.process_user = u.user_id join patents p on f.patent = p.patent_id
				join patent_status ps on p.patent_status = ps.patent_status_id) 
		 where f.fee_owner = #{userId} and f.fee_monitor_status = 2
		 order by p.patent_id, f.deadline
		 limit #{startIndex}, #{pageSize}
	</select>
	
	<select id="getUserMonitoredFeesCount"  resultType="int">
		select count(*)
		  from fees f 
		 where f.fee_owner = #{userId} and f.fee_monitor_status = 2
	</select>
	
	<select id="searchUserMonitoredFees" parameterType="FeeSearchCondition" resultMap="FeeResultMap">
		<if test="keyword != null">
			<bind name="keyword_pattern" value="'%' + keyword + '%'" />
		</if>	
		select p.patent_id, p.app_no, p.patent_name, p.app_person, ps.patent_status_id, ps.patent_status_desc,
					 f.fee_id, f.deadline, f.fee_type, f.amount, f.invoice_title, fp.fee_payment_status_id, fp.fee_payment_status_desc,
					 fs.fee_monitor_status_id, fs.fee_monitor_status_desc
		  from fees f join fee_monitor_status fs on f.fee_monitor_status = fs.fee_monitor_status_id
		       join fee_payment_status fp on f.fee_payment_status = fp.fee_payment_status_id
				left join users u on f.process_user = u.user_id join patents p on f.patent = p.patent_id
				join patent_status ps on p.patent_status = ps.patent_status_id
		 where f.fee_owner = #{userId} and f.fee_monitor_status = 2
		 	<if test="patentType != null">
		 		and p.patent_type = #{patentType}
		 	</if>	
		 	<if test="patentStatus != null">
		 		and p.patent_status = #{patentStatus}
		 	</if>		 	
		 	<if test="paymentStatus != null">
		 		and f.fee_payment_status = #{paymentStatus}
		 	</if>		 			 	
		 	<if test="startDeadline != null">
		 		and f.deadline >= #{startDeadline}
		 	</if>	
		 	<if test="endDeadline != null">
		 		<![CDATA[ and f.deadline <= #{endDeadline} ]]>
		 	</if>		
		 	<if test="keyword != null">
				and (p.app_no like #{keyword_pattern} or p.patent_name like #{keyword_pattern} 
					or p.app_person like #{keyword_pattern} or f.fee_type like #{keyword_pattern}) 																	
			</if>		 
		order by p.patent_id, f.deadline
	</select>	
	
	
	
	
	
	<!-- CS:搜索分页 -->
	<select id="searchMonitoredFeesByPage" parameterType="FeeSearchCondition" resultMap="FeeResultMap">
		<if test="keyword != null">
			<bind name="keyword_pattern" value="'%' + keyword + '%'" />
		</if>	
		select p.patent_id, p.app_no, p.patent_name, p.app_person, ps.patent_status_id, ps.patent_status_desc,
					 f.fee_id, f.deadline, f.fee_type, f.amount, f.invoice_title, fp.fee_payment_status_id, fp.fee_payment_status_desc,
					 fs.fee_monitor_status_id, fs.fee_monitor_status_desc
		  from fees f join fee_monitor_status fs on f.fee_monitor_status = fs.fee_monitor_status_id
		       join fee_payment_status fp on f.fee_payment_status = fp.fee_payment_status_id
				left join users u on f.process_user = u.user_id join patents p on f.patent = p.patent_id
				join patent_status ps on p.patent_status = ps.patent_status_id
		 where f.fee_owner = #{userId} and f.fee_monitor_status = 2
		 	<if test="patentType != null">
		 		and p.patent_type = #{patentType}
		 	</if>	
		 	<if test="patentStatus != null">
		 		and p.patent_status = #{patentStatus}
		 	</if>		 	
		 	<if test="paymentStatus != null">
		 		and f.fee_payment_status = #{paymentStatus}
		 	</if>		 			 	
		 	<if test="startDeadline != null">
		 		and f.deadline >= #{startDeadline}
		 	</if>	
		 	<if test="endDeadline != null">
		 		<![CDATA[ and f.deadline <= #{endDeadline} ]]>
		 	</if>		
		 	<if test="keyword != null">
				and (p.app_no like #{keyword_pattern} or p.patent_name like #{keyword_pattern} 
					or p.app_person like #{keyword_pattern} or f.fee_type like #{keyword_pattern}) 																	
			</if>		 
		order by p.patent_id, f.deadline
		limit #{page.startIndex}, #{page.pageSize}
	</select>
	
	<select id="searchUserMonitoredFeesCount" resultType="int">
		<if test="keyword != null">
			<bind name="keyword_pattern" value="'%' + keyword + '%'" />
		</if>	
		select count(*)
		  from fees f join patents p on f.patent = p.patent_id
		 where f.fee_owner = #{userId} and f.fee_monitor_status = 2
		 	<if test="patentType != null">
		 		and p.patent_type = #{patentType}
		 	</if>	
		 	<if test="patentStatus != null">
		 		and p.patent_status = #{patentStatus}
		 	</if>		 	
		 	<if test="paymentStatus != null">
		 		and f.fee_payment_status = #{paymentStatus}
		 	</if>		 			 	
		 	<if test="startDeadline != null">
		 		and f.deadline >= #{startDeadline}
		 	</if>	
		 	<if test="endDeadline != null">
		 		<![CDATA[ and f.deadline <= #{endDeadline} ]]>
		 	</if>		
		 	<if test="keyword != null">
				and (p.app_no like #{keyword_pattern} or p.patent_name like #{keyword_pattern} 
					or p.app_person like #{keyword_pattern} or f.fee_type like #{keyword_pattern}) 																	
			</if>		 
	</select>
	
	
	
	
	
	<insert id="insertFees" parameterType="list" useGeneratedKeys="true" keyProperty="feeId">
		insert into fees(deadline, fee_type, amount, patent, fee_owner) 
		values
		<foreach item="feeRecord" collection="list" separator=",">
			(#{feeRecord.deadline}, #{feeRecord.feeType}, #{feeRecord.amount}, #{feeRecord.patent.patentId}, #{feeRecord.owner.userId})
		</foreach>
		on duplicate key update
		   fee_owner = #{feeRecord.owner.userId}
	</insert>
	
	<select id="getFeesByIds" resultMap="FeeResultMap">
		select p.patent_id, p.app_no, p.patent_name, p.app_person, ps.patent_status_id, ps.patent_status_desc,
			 pt.patent_type_id, pt.patent_type_desc,			
			 f.fee_id, f.deadline, f.fee_type, f.amount, f.invoice_title, fp.fee_payment_status_id, fp.fee_payment_status_desc,
			 fs.fee_monitor_status_id, fs.fee_monitor_status_desc
		  from fees f join fee_monitor_status fs on f.fee_monitor_status = fs.fee_monitor_status_id
		       join fee_payment_status fp on f.fee_payment_status = fp.fee_payment_status_id
				left join users u on f.process_user = u.user_id join patents p on f.patent = p.patent_id
				join patent_status ps on p.patent_status = ps.patent_status_id join patent_types pt on p.patent_type = pt.patent_type_id
		 where f.fee_id in
		 <foreach item="feeId" collection="feeIdList" open="(" separator="," close=")">
			 #{feeId}
		 </foreach>		
	</select>
	
	<update id="updateFeesInvoiceTitle">
		update fees set invoice_title = #{invoiceTitle}
		where fee_id in
		<foreach item="feeId" collection="feeIdList" open="(" separator="," close=")">
			#{feeId}
		</foreach>			
	</update>
	
	
	<delete id="deleteFees" parameterType="list">
	   delete from fees where not exists (select 1 from order_items where fee_id = fees.fee_id) 
	   and fee_owner=#{userId}
	   and fee_id IN
		 <foreach item="feeId" collection="feeIdList" open="(" separator="," close=")">
			 #{feeId}
		 </foreach>
	</delete>
	
	<update id="updateFeesStatus">
		update fees set fee_payment_status = #{status}
		where fee_id in
		<foreach item="feeId" collection="feeIdList" open="(" separator="," close=")">
			#{feeId}
		</foreach>			
	</update>
	
	<select id="getMonitoredFeesByType"  resultType="map">
		select p.patent_type patentType,count(*) feeCount
		  from fees f join fee_monitor_status fs on f.fee_monitor_status = fs.fee_monitor_status_id
		       join fee_payment_status fp on f.fee_payment_status = fp.fee_payment_status_id
				left join users u on f.process_user = u.user_id join patents p on f.patent = p.patent_id
				join patent_status ps on p.patent_status = ps.patent_status_id
		 where f.fee_owner = #{userId} and f.fee_monitor_status = 2
		 group by p.patent_type
	</select>
	
	<select id="getMonitoredFeesByStatus"  resultType="map">
		select f.fee_payment_status feePaymentStatus,count(*) feeCount
		  from fees f join fee_monitor_status fs on f.fee_monitor_status = fs.fee_monitor_status_id
		       join fee_payment_status fp on f.fee_payment_status = fp.fee_payment_status_id
				left join users u on f.process_user = u.user_id join patents p on f.patent = p.patent_id
				join patent_status ps on p.patent_status = ps.patent_status_id
		 where f.fee_owner = #{userId} and f.fee_monitor_status = 2
		 group by f.fee_payment_status
	</select>
	
	<select id="getMonitoredFeesByFeeType"  resultType="map">
		select p.patent_status patentStatus,count(*) feeCount
		  from fees f join fee_monitor_status fs on f.fee_monitor_status = fs.fee_monitor_status_id
		       join fee_payment_status fp on f.fee_payment_status = fp.fee_payment_status_id
				left join users u on f.process_user = u.user_id join patents p on f.patent = p.patent_id
				join patent_status ps on p.patent_status = ps.patent_status_id
		 where f.fee_owner = #{userId} and f.fee_monitor_status = 2
		 group by p.patent_status
	</select>
	
</mapper>